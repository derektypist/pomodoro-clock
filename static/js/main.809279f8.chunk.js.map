{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["accurateInterval","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","TimerLengthControl","className","id","this","props","titleID","title","minID","value","onClick","lengthID","length","addID","React","Component","Timer","state","brkLength","seshLength","timerState","timerType","timer","intervalID","alarmColor","color","setBrkLength","bind","setSeshLength","lengthControl","timerControl","beginCountDown","decrementTimer","phaseControl","warning","buzzer","switchTimer","clockify","reset","e","currentTarget","stateToChange","sign","currentLength","setState","_timer","audioBeep","play","num","str","minutes","Math","floor","seconds","pause","currentTime","style","preload","ref","audio","src","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.809279f8.chunk.js","sourcesContent":["import React from 'react';\n\nconst accurateInterval = function (fn, time) {\n  var cancel, nextAt, timeout, wrapper;\n  nextAt = new Date().getTime() + time;\n  timeout = null;\n  wrapper = function () {\n    nextAt += time;\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return fn();\n  };\n  cancel = function () {\n    return clearTimeout(timeout);\n  };\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n  return {\n    cancel: cancel\n  };\n};\n\n\n\n// Set Up Components\nclass TimerLengthControl extends React.Component {\n    render() {\n        return (\n            <div className=\"length-control\">\n                <div id={this.props.titleID}>\n                    {this.props.title}\n                </div>\n                <button id={this.props.minID}\n                    className=\"btn-level\" value=\"-\"\n                    onClick={this.props.onClick}>\n                    <i className=\"fa fa-arrow-down fa-2x\" />\n                </button>\n                <div id={this.props.lengthID} className=\"btn-level\">\n                    {this.props.length}\n                </div>\n                <button id={this.props.addID}\n                    className=\"btn-level\" value=\"+\"\n                    onClick={this.props.onClick}>\n                    <i className=\"fa fa-arrow-up fa-2x\" />\n                </button>\n            </div>\n        )\n    }\n};\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brkLength: 5,\n      seshLength: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: { color: 'white' }\n    };\n    this.setBrkLength = this.setBrkLength.bind(this);\n    this.setSeshLength = this.setSeshLength.bind(this);\n    this.lengthControl = this.lengthControl.bind(this);\n    this.timerControl = this.timerControl.bind(this);\n    this.beginCountDown = this.beginCountDown.bind(this);\n    this.decrementTimer = this.decrementTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n    this.warning = this.warning.bind(this);\n    this.buzzer = this.buzzer.bind(this);\n    this.switchTimer = this.switchTimer.bind(this);\n    this.clockify = this.clockify.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setBrkLength(e) {\n    this.lengthControl(\n      'brkLength',\n      e.currentTarget.value,\n      this.state.brkLength,\n      'Session'\n    );\n  }\n  setSeshLength(e) {\n    this.lengthControl(\n      'seshLength',\n      e.currentTarget.value,\n      this.state.seshLength,\n      'Break'\n    );\n  }\n  lengthControl(stateToChange, sign, currentLength, timerType) {\n    if (this.state.timerState === 'running') {\n      return;\n    }\n    if (this.state.timerType === timerType) {\n      if (sign === '-' && currentLength !== 1) {\n        this.setState({ [stateToChange]: currentLength - 1 });\n      } else if (sign === '+' && currentLength !== 60) {\n        this.setState({ [stateToChange]: currentLength + 1 });\n      }\n    } else if (sign === '-' && currentLength !== 1) {\n      this.setState({\n        [stateToChange]: currentLength - 1,\n        timer: currentLength * 60 - 60\n      });\n    } else if (sign === '+' && currentLength !== 60) {\n      this.setState({\n        [stateToChange]: currentLength + 1,\n        timer: currentLength * 60 + 60\n      });\n    }\n  }\n  timerControl() {\n    if (this.state.timerState === 'stopped') {\n      this.beginCountDown();\n      this.setState({ timerState: 'running' });\n    } else {\n      this.setState({ timerState: 'stopped' });\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n    }\n  }\n  beginCountDown() {\n    this.setState({\n      intervalID: accurateInterval(() => {\n        this.decrementTimer();\n        this.phaseControl();\n      }, 1000)\n    });\n  }\n  decrementTimer() {\n    this.setState({ timer: this.state.timer - 1 });\n  }\n  phaseControl() {\n    let timer = this.state.timer;\n    this.warning(timer);\n    this.buzzer(timer);\n    if (timer < 0) {\n      if (this.state.intervalID) {\n        this.state.intervalID.cancel();\n      }\n      if (this.state.timerType === 'Session') {\n        this.beginCountDown();\n        this.switchTimer(this.state.brkLength * 60, 'Break');\n      } else {\n        this.beginCountDown();\n        this.switchTimer(this.state.seshLength * 60, 'Session');\n      }\n    }\n  }\n  warning(_timer) {\n    if (_timer < 61) {\n      this.setState({ alarmColor: { color: '#a50d0d' } });\n    } else {\n      this.setState({ alarmColor: { color: 'white' } });\n    }\n  }\n  buzzer(_timer) {\n    if (_timer === 0) {\n      this.audioBeep.play();\n    }\n  }\n  switchTimer(num, str) {\n    this.setState({\n      timer: num,\n      timerType: str,\n      alarmColor: { color: 'white' }\n    });\n  }\n  clockify() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return minutes + ':' + seconds;\n  }\n  reset() {\n    this.setState({\n      brkLength: 5,\n      seshLength: 25,\n      timerState: 'stopped',\n      timerType: 'Session',\n      timer: 1500,\n      intervalID: '',\n      alarmColor: { color: 'white' }\n    });\n    if (this.state.intervalID) {\n      this.state.intervalID.cancel();\n    }\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"main-title\">25 + 5 Clock</div>\n        <TimerLengthControl\n          addID=\"break-increment\"\n          length={this.state.brkLength}\n          lengthID=\"break-length\"\n          minID=\"break-decrement\"\n          onClick={this.setBrkLength}\n          title=\"Break Length\"\n          titleID=\"break-label\"\n        />\n        <TimerLengthControl\n          addID=\"session-increment\"\n          length={this.state.seshLength}\n          lengthID=\"session-length\"\n          minID=\"session-decrement\"\n          onClick={this.setSeshLength}\n          title=\"Session Length\"\n          titleID=\"session-label\"\n        />\n        <div className=\"timer\" style={this.state.alarmColor}>\n          <div className=\"timer-wrapper\">\n            <div id=\"timer-label\">{this.state.timerType}</div>\n            <div id=\"time-left\">{this.clockify()}</div>\n          </div>\n        </div>\n        <div className=\"timer-control\">\n          <button id=\"start_stop\" onClick={this.timerControl}>\n            <i className=\"fa fa-play fa-2x\" />\n            <i className=\"fa fa-pause fa-2x\" />\n          </button>\n          <button id=\"reset\" onClick={this.reset}>\n            <i className=\"fa fa-refresh fa-2x\" />\n          </button>\n        </div>\n        \n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={(audio) => {\n            this.audioBeep = audio;\n          }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </div>\n    );\n  }\n}\n         \n\nexport default Timer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Timer from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <Timer />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}